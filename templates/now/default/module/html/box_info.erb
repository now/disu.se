<dl>
<% if CodeObjects::ClassObject === object && object.superclass %>
  <dt>Ancestors</dt>
  <dd>
    <ol class="module-list ancestors">
    <% object.inheritance_tree[1..-1].each do |e| %>
      <li><p><%= linkify(e) %></p></li>
    <% end %>
      <li><p><%= linkify P(:Object) %></p></li>
    </ol>
  </dd>
<% end %>
<% unless object.mixins(:class).empty? %>
  <dt>Extended by</dt>
  <dd>
    <ol class="module-list extends">
    <% object.mixins(:class).each do |e| %>
      <li><p><%= linkify(e) %></p></li>
    <% end %>
    </ol>
  </dd>
<% end %>
<% unless object.mixins(:instance).empty? %>
  <dt>Includes</dt>
  <dd>
    <ol class="module-list includes">
    <% object.mixins(:instance).each do |e| %>
      <li><p><%= linkify(e) %></p></li>
    <% end %>
    </ol>
  </dd>
<% end %>
<% unless mixed_into(object).empty? %>
  <dt>Included by</dt>
  <dd>
    <ul class="module-list includers">
    <% mixed_into(object).sort_by{ |e| e.path }.each do |e| %>
      <li><p><%= linkify(e) %></p></li>
    <% end %>
    </ul>
  </dd>
<% end %>
</dl>
